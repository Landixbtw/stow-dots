;;; init.el --- Main initialization file for Emacs -*- lexical-binding: t; -*-

;; Bootstrap straight.el properly
(defvar bootstrap-version)
(let ((bootstrap-file
       (expand-file-name "straight/repos/straight.el/bootstrap.el" user-emacs-directory))
      (bootstrap-version 6))
  (unless (file-exists-p bootstrap-file)
    (with-current-buffer
        (url-retrieve-synchronously
         "https://raw.githubusercontent.com/radian-software/straight.el/develop/install.el"
         'silent 'inhibit-cookies)
      (goto-char (point-max))
      (eval-print-last-sexp)))
  (load bootstrap-file nil 'nomessage))

;; Make sure repositories are properly initialized
(straight-pull-recipe-repositories nil)

;; Configure straight.el
(defvar straight-use-package-by-default)
(setq straight-use-package-by-default t)

;; Install use-package
(straight-use-package 'use-package)

;; Configure use-package
(defvar use-package-always-ensure)
(setq use-package-always-ensure t)

;; Load configurations from external files
;; Only after straight.el and use-package are properly initialized
(mapc (lambda (file)
        (let ((file-path (expand-file-name file user-emacs-directory)))
          (when (file-exists-p file-path)
            (load file-path))))
      '("auctex.el" "packages.el" "custom.el" "modeline.el"))

;; UI Configuration
(menu-bar-mode 0)
(tool-bar-mode 0)
(scroll-bar-mode 0)
(global-display-line-numbers-mode)
(set-face-attribute 'default nil :family "JetBrainsMono Nerd Font" :height 160)

;; General Settings
(electric-pair-mode 1)
(save-place-mode t)
(global-auto-revert-mode t)
(setq make-backup-files nil)

;; Indentation
(setq-default indent-tabs-mode t)
(setq backward-delete-char-untabify-method nil)
(setq tab-width 4
      c-basic-offset tab-width)

;; Dired Settings
(use-package dired
  :ensure nil  ; Built-in package
  :config
  (require 'dired-x)
  :custom
  (dired-omit-files (concat dired-omit-files "\\|^\\..+$"))
  (dired-dwim-target t)
  (dired-listing-switches "-lahv")
  (dired-recursive-copies 'always)
  (dired-recursive-deletes 'always)
  (dired-mouse-drag-files t)
  :hook
  (dired-mode . (lambda ()
                  (set-face-attribute 'dired-directory nil :height 150)
                  (set-face-attribute 'dired-header nil :height 150))))

;; LSP performance tuning
(setq gc-cons-threshold (* 100 1024 1024)
      read-process-output-max (* 1024 1024)
      treemacs-space-between-root-nodes nil)

(provide 'init)
;;; init.el ends here
